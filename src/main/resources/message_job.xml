<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <batch:job id="messageJob" restartable="true" job-repository="batchJobRepository">
        <batch:step id="messageStep">
            <batch:tasklet task-executor="taskExecutor">
                <batch:chunk reader="userInfoReader" processor="messageProcessor" writer="messageWriter"
                             commit-interval="2" chunk-completion-policy="" retry-limit="4" >
                    <batch:retryable-exception-classes>
                        <batch:exclude class="troywang.gringotts.base.exception.MoneyNotEnoughException"/>
                    </batch:retryable-exception-classes>
                    <batch:skippable-exception-classes>

                    </batch:skippable-exception-classes>
                    <batch:retry-listeners>
                        <batch:listener ref="commonRetryListener"/>
                    </batch:retry-listeners>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="messageJobListener"/>
        </batch:listeners>
    </batch:job>

    <!--<bean id="jobRepository"-->
    <!--class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">-->
    <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--</bean>-->

    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <bean id="userInfoReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="comments" value="@,#"/>
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper" ref="userInfoLineMapper">
        </property>
        <property name="resource" value="file:d:/Github/Gringotts/files/users.txt">
        </property>
    </bean>

    <bean id="userInfoLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer" ref="userInfoLineTokenizer">
            <!--<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">-->
            <!--</bean>-->
        </property>
        <property name="fieldSetMapper">
            <bean class="troywang.gringotts.file.mapper.UserInfoMapper">
            </bean>
        </property>
    </bean>

    <bean id="messageProcessor" class="troywang.gringotts.biz.processor.MessageProcessor">
    </bean>

    <bean id="messageWriter" class="troywang.gringotts.biz.writer.MessageWriter">
    </bean>

    <bean id="messageJobListener" class="troywang.gringotts.listener.MessageJobListener">
    </bean>

    <bean id="userInfoLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value="|"/>
        <property name="names" value="id,age"/>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="4"/>
        <property name="maxPoolSize" value="4"/>
    </bean>

    <!--JobRepo-->
    <bean id="batchJobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="batchDataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="batchDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/batch_in_action"/>
        <property name="username" value="spring"/>
        <property name="password" value="Troywang2"/>
    </bean>

    <bean id="commonRetryListener" class="troywang.gringotts.listener.CommonRetryListener"/>
</beans>